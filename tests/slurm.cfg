[scheduler]
container_backend=slurm_singularity
# task_concurrency defaults to the number of processors on the system.
# since we submit the jobs to SLURM this is not necessary.
# higher numbers means miniwdl has to monitor more processes simultaneously
# which might impact performance.
task_concurrency=200

# This setting allows running tasks to continue, even if one other tasks fails.
# Useful in combination with call caching. Prevents wasting resources by
# cancelling jobs half-way that would probably succeed.
fail_fast = false


[task_runtime]
# Setting a 'maxRetries' default allows jobs that fail due to intermittent
# errors on the cluster to be retried.
# "docker": "ubuntu:20.04",
defaults = {      
        "docker": "ubuntu:20.04",
        "maxRetries": 2
        
    }
#container = "/mnt/Bioinfo/Softs/NF-core/singularity_img/depot.galaxyproject.org-singularity-ubuntu-20.04.img"


[singularity]
# This plugin wraps the singularity backend. Make sure the settings are
# appropriate for your cluster.
exe = ["singularity"]

# the miniwdl default options contain options to run as a fake root, which
# is not available on most clusters.
# WARN: No need for '--containall'
#       But have to also bind my HOME for 'slurm_singularity' backend to work
#       (not needed with simple 'singularity' backend, dunno why...)
run_options = [
        "--bind", "/mnt/Bioinfo,/mnt/chu-ngs",
        "--env", "PREPEND_PATH=/home/felix/.conda/envs/Exome_prod/bin"
    ]


[slurm]
# extra arguments passed to the srun command (optional).
extra_args="--partition test --comment 'run with miniwdl'"
